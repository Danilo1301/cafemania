//going to door
if(this.clientStatus.state == PlayerClientState.GOING_TO_DOOR) {
    this.debugText.setTextLine('state', 'GOING_TO_DOOR')

    if(!this._isGoingToDoor) {
        this._isGoingToDoor = true;
        this.log("going to door...");

        const door = this.world.game.tileItemFactory.getTileItem(this.clientStatus.goingToDoorId!) as TileItemDoor;
        const doorTileBehind = door.getTileBehind(2)!;

        
        this.taskWalkToTile(doorTileBehind, () => {
            this.onReachBehindDoor();
        })

    }
}

//finding chair
if(this._canFindChair) {
    const chair = this.processFindChair(dt);

    if(chair) {
        this._canFindChair = false;
        this.data.goingToChairId = chair.id;
        this.data.state = PlayerClientState.GOING_TO_CHAIR;
        chair.setIsReserved(true);

        this.setAsChangedState();
    }
}

//going to chair
if(this.data.state == PlayerClientState.GOING_TO_CHAIR) {
    this.debugText.setTextLine('state', 'GOING_TO_CHAIR')


    //if not going to chair, and not still going to door
    if(!this._isGoingToChair && !this._isGoingToDoor) {
        this._isGoingToChair = true;
        this.log("going to chair...");

        const chair = this.world.game.tileItemFactory.getTileItem(this.clientStatus.goingToChairId!) as TileItemChair;
        const cairTile = chair.tile;
        this.walkToTile(cairTile.x, cairTile.y, () => {
            this.onReachChair();
        });
    }
}









public onReachBehindDoor() {
    this.log("reach behind door");

    const door = this.world.game.tileItemFactory.getTileItem(this.data.goingToDoorId!) as TileItemDoor;
    const doorTileBehind = door.getTileBehind(2)!;

    if(this.world.sync != SyncType.SYNC) this._canFindChair = true;

    const doorTile = door.tile;

    this.log("going to door tile...");
    this.walkToTile(doorTile.x, doorTile.y, () => {
        this.log("reach door");

        this._isGoingToDoor = false;
    });
    
}

public onReachChair() {
    this.log("reach to chair");

    this.clientStatus.state = PlayerClientState.SITTING;
    this.setAsChangedState();

    if(this.world.sync != SyncType.SYNC) {
        this.waitingForWaiter = true;
    }

}